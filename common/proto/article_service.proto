syntax = "proto3";

package article;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "profile_service.proto";

option go_package = ".;pb";

message Article {
  string slug = 1;
  string title = 2;
  string description = 3;
  string body = 4;
  repeated string tagList = 5;
  string createdAt = 6;
  string updatedAt = 7;
  bool favorited = 8;
  int32 favoritesCount = 9;
  profile.Profile author = 10;
}

message GetArticlesFeedRequest {
  int32 limit = 1;
  int32 offset = 2;
}

message MultipleArticlesResponse {
  repeated Article articles = 1;
  int32 articlesCount = 2;
}

message GetArticlesRequest {
  string tag = 1;
  string author = 2;
  string favorited = 3;
  int32 limit = 4;
  int32 offset = 5;
}

message NewArticle {
  string title = 1;
  string description = 2;
  string body = 3;
  repeated string tagList = 4;
}

message NewArticleRequest {
  NewArticle article = 1;
}

message SingleArticleResponse {
  Article article = 1;
}

message UpdateArticleRequest {
  message UpdateArticle {
    string title = 1;
    string description = 2;
    string body = 3;
    string slug = 4;
  }
  UpdateArticle article = 1;
}

message Comment {
  int32 id = 1;
  string createdAt = 2;
  string updatedAt = 3;
  string body = 4;
  profile.Profile author = 5;
}

message MultipleCommentsResponse {
  repeated Comment comments = 1;
}

message NewCommentRequest {
  message NewComment {
    string body = 1;
    string slug = 2;
  }
  NewComment comment = 1;
}

message SingleCommentResponse {
  Comment comment = 1;
}

message TagsResponse {
  repeated string tags = 1;
}

message GetArticleRequest {
  string slug = 1;
}

message DeleteArticleRequest {
  string slug = 1;
}

message GetArticleCommentsRequest {
  string slug = 1;
}

message DeleteArticleCommentRequest {
  string slug = 1;
  int32 id = 2;
}

message CreateArticleFavoriteRequest {
  string slug = 1;
}

message DeleteArticleFavoriteRequest {
  string slug = 1;
}

service ArticleService {
  rpc GetArticles(GetArticlesRequest) returns (MultipleArticlesResponse) {
    option (google.api.http) = {
      get: "/api/articles"
    };
  }
  rpc CreateArticle(NewArticleRequest) returns (SingleArticleResponse) {
    option (google.api.http) = {
      post: "/api/articles"
      body: "*"
    };
  }
  rpc GetArticle(GetArticleRequest) returns (SingleArticleResponse) {
    option (google.api.http) = {
      get: "/api/articles/{slug}"
    };
  }
  rpc GetArticlesFeed(GetArticlesFeedRequest) returns (MultipleArticlesResponse) {
    option (google.api.http) = {
      get: "/api/articles/feed"
    };
  }
  rpc UpdateArticle(UpdateArticleRequest) returns (SingleArticleResponse) {
    option (google.api.http) = {
      put: "/api/articles/{article.slug}",
      body: "*"
    };
  }
  rpc DeleteArticle(DeleteArticleRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/articles/{slug}"
    };
  }
  rpc GetArticleComments(GetArticleCommentsRequest) returns (MultipleCommentsResponse) {
    option (google.api.http) = {
      get: "/api/articles/{slug}/comments"
    };
  }
  rpc CreateArticleComment(NewCommentRequest) returns (SingleCommentResponse) {
    option (google.api.http) = {
      post: "/api/articles/{comment.slug}/comments",
      body: ""
    };
  }
  rpc DeleteArticleComment(DeleteArticleCommentRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/api/articles/{slug}/comments/{id}"
    };
  }
  rpc CreateArticleFavorite(CreateArticleFavoriteRequest) returns (SingleArticleResponse) {
    option (google.api.http) = {
      post: "/api/articles/{slug}/favorite",
      body: "*"
    };
  }
  rpc DeleteArticleFavorite(DeleteArticleFavoriteRequest) returns (SingleArticleResponse) {
    option (google.api.http) = {
      delete: "/api/articles/{slug}/favorite"
    };
  }
  rpc GetTags(google.protobuf.Empty) returns (TagsResponse) {
    option (google.api.http) = {
      get: "/api/tags"
    };
  }
}